//@copy-c-declaration /*
//@copy-c-declaration *
//@copy-c-declaration * Varian,Inc. All Rights Reserved.
//@copy-c-declaration * This software contains proprietary and confidential
//@copy-c-declaration * information of Varian, Inc. and its contributors.
//@copy-c-declaration * Use, disclosure and reproduction is prohibited without
//@copy-c-declaration * prior consent.
//@copy-c-declaration */
//@copy-c-declaration /*
//@copy-c-declaration *  Author: Greg Brissey  11/15/2004
//@copy-c-declaration */

//@copy-c-declaration #include "ndds/ndds_c.h"
//@copy-c-declaration #include "NDDS_Obj.h"

//@copy-c-declaration /* topic name form */
//@copy-c-declaration /* topic names form: h/rf1/dwnld/strm, rf1/h/dwnld/reply */

#define HB_USE_MULTICAST 
#ifdef HB_USE_MULTICAST 
const string APP_HB_MULTICAST_IP = "225.0.0.15";
#else
const string APP_HB_MULTICAST_IP = "0";   /* unicast */
#endif

const string PUB_AppHB_TOPIC_FORMAT_STR = "%s/h/AppHB";
const string SUB_AppHB_TOPIC_FORMAT_STR = "%s/h/AppHB";
const string AppHB_PATTERN_FORMAT_STR  = "*/h/AppHB";
const string PUB_NodeHB_TOPIC_FORMAT_STR = "%s/cntlr/AppHB";
const string SUB_NodeHB_TOPIC_FORMAT_STR = "%s/cntlr/AppHB";
const string nodeHB_PATTERN_FORMAT_STR  = "*/cntlr/AppHB";

struct App_HB {
        char AppIdStr[16];    /* controller ID String, e.g. rf1. Gradient1, ddr1, etc... */
	unsigned long HBcnt;
        long    ThreadId;
        long    AppId;
};

//@copy-c-declaration 
//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration     extern "C" {
//@copy-c-declaration #endif
//@copy-c-declaration 
//@copy-c-declaration extern void getApp_HBInfo(NDDS_OBJ *pObj);
//@copy-c-declaration 
//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration }
//@copy-c-declaration #endif
//@copy-c-declaration 

// //@copy-c /* Direct Code from Codes_Downld.x */
// //@copy-c void getApp_HBInfo(NDDS_OBJ *pObj)
// //@copy-c {
// //@copy-c     strcpy(pObj->dataTypeName,App_HBNDDSType);
// //@copy-c 
// //@copy-c     pObj->TypeRegisterFunc = App_HBNddsRegister;
// //@copy-c     pObj->TypeAllocFunc = (DataTypeAllocate) App_HBAllocate;
// //@copy-c     pObj->TypeSizeFunc = App_HBMaxSize;
// //@copy-c }

